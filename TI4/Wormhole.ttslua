-------------------------------------------------------------------------------
--- Wormhole utils for Darth Batman and Raptor1210's "Twilight Imperium IV" TTS mod.
-- @author bonkersbgg on BoardGameGeek.com
-------------------------------------------------------------------------------

CrLua.require('List')
CrLua.require('TTS.Object')

local TAG = 'CrLua.TI4.Wormhole'

CrLua.TI4 = CrLua.TI4 or {}
CrLua.TI4.Wormhole = assert(not CrLua.TI4.Wormhole) and {}

CrLua.TI4.Wormhole.TYPE = {
    ALPHA = 'alpha',
    BETA = 'beta',
    DELTA = 'delta',
}

CrLua.TI4.Wormhole.GUIDS = {
    -- Planet tiles.
    ['c56a8a'] = CrLua.TI4.Wormhole.TYPE.DELTA,
    ['71e1bf'] = CrLua.TI4.Wormhole.TYPE.BETA,
    ['f11ef5'] = CrLua.TI4.Wormhole.TYPE.ALPHA,
    ['0378a4'] = CrLua.TI4.Wormhole.TYPE.ALPHA,
    ['ccd7ac'] = CrLua.TI4.Wormhole.TYPE.BETA,
    ['f38182'] = CrLua.TI4.Wormhole.TYPE.DELTA,

    -- Ghost flagship.
    -- Hmm, is this static?  Find it by name rather than guid.

    -- Ghost extra wormhole tokens.
    ['0d2f86'] = CrLua.TI4.Wormhole.TYPE.ALPHA,
    ['cba3a7'] = CrLua.TI4.Wormhole.TYPE.BETA,
}

CrLua.TI4.Wormhole.OBJECT_NAMES = {
    ['Hil Colish'] = CrLua.TI4.Wormhole.TYPE.DELTA,
}

-------------------------------------------------------------------------------
--- Find wormholes.
-- Type is one of CrLua.TI4.Wormhole.TYPE values.
-- @return table : list of tables with {type->string, object->Object}.
-------------------------------------------------------------------------------
function CrLua.TI4.Wormhole.findWormholes()
    local result = {}

    local function addResult(object, wormholeType)
        assert(type(wormholeType) == 'string')
        table.insert(result, { object = object, type = wormholeType })
    end

    for guid, wormholeType in pairs(CrLua.TI4.Wormhole.GUIDS) do
        local object = getObjectFromGUID(guid)
        if object then
            addResult(object, wormholeType)
        end
    end

    local objectNames = CrLua.List.fromKeys(CrLua.TI4.Wormhole.OBJECT_NAMES)
    local objectsByName = CrLua.TTS.Object.getByName(objectNames)
    for name, objects in pairs(objectsByName) do
        local wormholeType = CrLua.TI4.Wormhole.OBJECT_NAMES[name]
        for _, object in ipairs(objects) do
            addResult(object, wormholeType)
        end
    end

    return result
end
